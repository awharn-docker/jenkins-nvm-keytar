name: ci
on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 0'

jobs:
  build-and-deploy-n14:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: awharn
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        id:   build
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64
          build-args: |
            IMAGE_VERSION_ARG=14
          tags: |
            awharn/jenkins-nvm-keytar:14
            ghcr.io/awharn-docker/jenkins-nvm-keytar:14
      
      - name: Image Digest
        run:  echo ${{ steps.build.outputs.digest }}

  build-and-deploy-n16:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: awharn
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        id:   build
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64
          build-args: |
            IMAGE_VERSION_ARG=16
          tags: |
            awharn/jenkins-nvm-keytar:latest
            awharn/jenkins-nvm-keytar:16
            ghcr.io/awharn-docker/jenkins-nvm-keytar:latest
            ghcr.io/awharn-docker/jenkins-nvm-keytar:16
      
      - name: Image Digest
        run:  echo ${{ steps.build.outputs.digest }}

  build-and-deploy-n18:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: awharn
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        id:   build
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64
          build-args: |
            IMAGE_VERSION_ARG=18
          tags: |
            awharn/jenkins-nvm-keytar:18
            ghcr.io/awharn-docker/jenkins-nvm-keytar:18
      
      - name: Image Digest
        run:  echo ${{ steps.build.outputs.digest }}
        
  build-and-deploy-arm:
    runs-on: fastarm
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: awharn
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        id:   build
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/arm64
          build-args: |
            IMAGE_VERSION_ARG=${{ matrix.node }}
          tags: |
            awharn/jenkins-nvm-keytar-arm:${{ matrix.node }}
            ghcr.io/awharn-docker/jenkins-nvm-keytar-arm:${{ matrix.node }}
            ${{ matrix.node == 16 && 'awharn/jenkins-nvm-keytar-arm:latest' || ''}}
            ${{ matrix.node == 16 && 'ghcr.io/awharn-docker/jenkins-nvm-keytar-arm:latest' || ''}}
      
      - name: Image Digest
        run:  echo ${{ steps.build.outputs.digest }}

  # build-and-deploy-n16-arm:
  #   runs-on: fastarm
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
      
  #     - name: Login to Dockerhub
  #       uses: docker/login-action@v2
  #       with:
  #         username: awharn
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build & Push
  #       id:   build
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         platforms: linux/arm64
  #         build-args: |
  #           IMAGE_VERSION_ARG=16
  #         tags: |
  #           awharn/jenkins-nvm-keytar-arm:latest
  #           awharn/jenkins-nvm-keytar-arm:16
  #           ghcr.io/awharn-docker/jenkins-nvm-keytar-arm:latest
  #           ghcr.io/awharn-docker/jenkins-nvm-keytar-arm:16
      
  #     - name: Image Digest
  #       run:  echo ${{ steps.build.outputs.digest }}

  # build-and-deploy-n18-arm:
  #   runs-on: fastarm
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
      
  #     - name: Login to Dockerhub
  #       uses: docker/login-action@v2
  #       with:
  #         username: awharn
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build & Push
  #       id:   build
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         platforms: linux/arm64
  #         build-args: |
  #           IMAGE_VERSION_ARG=18
  #         tags: |
  #           awharn/jenkins-nvm-keytar-arm:18
  #           ghcr.io/awharn-docker/jenkins-nvm-keytar-arm:18
      
  #     - name: Image Digest
  #       run:  echo ${{ steps.build.outputs.digest }}

  # update-downstream:
  #   runs-on: ubuntu-20.04
  #   needs: [build-and-deploy-n16, build-and-deploy-n16-arm]
  #   steps:
  #     - name: Update Downstream
  #       uses: benc-uk/workflow-dispatch@v1
  #       with: 
  #         ref:      refs/heads/master
  #         workflow: ci
  #         repo:     awharn-docker/jenkins-nvm-zowe-cli
  #         token:    ${{ secrets.PAT }}
